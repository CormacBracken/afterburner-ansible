---
- name: add mysql application database
  mysql_db: >
    db={{ applicationDBName }}
    state=present
    encoding=utf8
    collation=utf8_general_ci
  tags:
    - mysql:application
    - wordpress

- name: add mysql application user
  mysql_user: >
    state=present
    user={{ applicationDBUser|truncate(13, False, '') }}
    password={{ applicationDBPass }}
    host="%"
    priv={{ applicationDBName }}.*:ALL,GRANT
  tags:
    - mysql:application
    - wordpress

- name: check if database contains tables
  shell: >
    /usr/bin/mysql -Bse "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '{{ applicationDBName }}';"
  register: countAppDatabaseTables
  tags:
    - mysql:application
    - wordpress

- name: copy wordpress.sql for importing
  template: >
    src=wordpress.sql.j2
    dest=/tmp/wordpress.sql
    owner=root group=root mode=0700
  when: isMultisite == false and countAppDatabaseTables.stdout == "0"
  tags:
    - mysql:application
    - wordpress

- name: import wordpress.sql
  shell: >
    mysql {{ applicationDBName }} < /tmp/wordpress.sql
  when: isMultisite == false and countAppDatabaseTables.stdout == "0"
  tags:
    - mysql:application
    - wordpress

- name: copy wordpress-multisite.sql for importing
  template: >
    src=wordpress-multisite.sql.j2
    dest=/tmp/wordpress-multisite.sql
    owner=root group=root mode=0700
  when: isMultisite == true and countAppDatabaseTables.stdout == "0"
  tags:
    - mysql:application
    - wordpress

- name: import wordpress-multisite.sql
  shell: >
    mysql {{ applicationDBName }} < /tmp/wordpress-multisite.sql
  when: isMultisite == true and countAppDatabaseTables.stdout == "0"
  tags:
    - mysql:application
    - wordpress

- name: remove wordpress.sql
  file: path=/tmp/wordpress.sql state=absent
  tags:
    - mysql:application
    - wordpress
