server {
  listen 80 default_server;

  # accept redirects based on the value of the host header. if
  # there's no valid vhost configuration file with a
  # corresponding server_name directive then signal an error and
  # fail silently. See:
  # http://wiki.nginx.org/NginxHttpCoreModule#server_name_in_redirect
  server_name_in_redirect off;
  return 444;
}

## default server block
server {
  listen 80;
  server_name {{ ansible_hostname }} 127.0.0.1;

  ## logs
  access_log /var/log/nginx/default-access.log;
  error_log /var/log/nginx/default-error.log;

  ## 405 unsupported http methods
  if ($not_allowed_method) {
    return 405;
  }

  ## files/directories that are system/hidden file types
  location ~* /(?:\.|package\.json) {
    return 404;
  }

  ## set document root
  root /var/www/common;
  index index.php index.html index.htm;

  ## error pages
  recursive_error_pages        on;
  error_page                   401 /401.html;
  error_page                   403 /403.html;
  error_page                   404 /404.html;
  error_page                   503 /503.html;
  error_page                   500 502 504 /50x.html;

  ## server location blocks, most to least specific
  ## robots block - checks for physical file before trying backend
  location = /robots.txt {
    access_log off;
    return 404;
  }

  ## static assets on disk
  location ~* ^.+\.(?:jpe?g|gif|png|css|js|ico|zip|7z|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|midi?|wav|bmp|rtf|avi|mp\\d|mpg|iso|mov|djvu|dmg|flac|r70|mdf|chm|sisx|sis|flv|thm|bin|swf|xml|cert|otf|ttf|eot|svgx?|woff|xsl)$ {
    access_log          /var/log/nginx/default-access-statics.log;
    log_not_found       off;

    ## max size, if larger - just stream the asset
    fastcgi_max_temp_file_size  2m;

    tcp_nodelay off;

    ## open file caching
    open_file_cache          max=3000 inactive=120s;
    open_file_cache_valid    45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   off;

    if_modified_since      before;

    ## set headers for expiry based on the fastcgi_cache_valid statements
    more_set_headers      -s '200' "Cache-Control: max-age=2764800, must-revalidate";
    more_set_headers      -s '301 302 404' "Cache-Control: max-age=60, must-revalidate";

    ## add cache/miss hit header
    more_set_headers      "X-Cache-Info: static";

    try_files $uri =404;
  }

  ## main server location block
  location / {
    ## connections per IP/requests per second per IP limits
    limit_conn  connection_limit   30;
    limit_req   zone=request_limit burst=200 nodelay;

    try_files $uri $uri/ =404;
  }

  location ~ \.php$ {
    ## connections per IP/requests per second per IP limits
    limit_conn  connection_limit   30;
    limit_req   zone=request_limit burst=200 nodelay;

    try_files $uri =404;

    ## pass the request upstream
    include                   /etc/nginx/fastcgi_params;
    fastcgi_index             index.php;
    fastcgi_intercept_errors  on;
    fastcgi_param             SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param             PATH_INFO $fastcgi_script_name;
    fastcgi_pass              unix:/tmp/php5-fpm.sock;
    break;
  }
}

## END
